continue
raise ActiveRecord::RecordNotFound
@token
continue
@token
continue
@token
continue
!@token
@token = Token.find_by(token_hash: params[:t])
params[:t]
@token
@user
continue
@tokens
continue
Token.find(137)
User.find(10)
User.find(7)
ScannedToken.all
continue
ScannedToken.all
continue
Token.all
Tokens.all
continue
User.find_by(email: 'pietro.borrello95@gmail.com')
User.find_by(email: 'pietro.borrello95@gmail.com').destroy
User.find_by(email: 'pietro.borrello95@gmail.com')
User.all
Users.all
continue
User.find_by(email: 'Mario@fake.com')
User.find_by(email: 'mario@fake.com')
User.findby(email: 'mario@fake.com')
User.findby(email: mario@fake.com)
User.all
continue
id_params
user_params
params
continue
info_str
continue
info_str
continue
info_str
continue
info_str
continue
params
info
infp
@@info.each do |info| puts info end
@@info.each do |info| puts info
@@info.each do |info|
params[:first_name]
@@info
info_str
continue
params
continue
store_location_for(resource, params[:redirect_to])
stored_location_for(resource)
store_location_for(resource, params[:redirect_to])
stored_location_for(resource)
continue
stored_location_for(resource)
params[:redirect_to]
continue
session[:return_to]
continue
:back
back
request.back
request.referer
request
session[:return_to]
continue
session[:redirect_to]
continue
session
continue
@user.send(:first_name)
continue
@user
continue
!params[:t]
params[:t]
 User.find(params[:id])
params
@user
continue
Token.destroy_all
@token = Token.find_by(token_hash: params[:t])
@token
params[:t]
@user
params
continue
@token
@user
params
continue
token_hash.length
continue
token_hash.length
token_hash
continue
params
continue
params
continue
@user = User.find(900000)
@user = User.find(params[:id])
continue
params
continue
@token
continue
SecureRandom.base64(21)
SecureRandom.base64(20)
SecureRandom.base64(22)
SecureRandom.base64(18)
SecureRandom.base64(16)
SecureRandom.base64(12)
SecureRandom.base64
continue
token_hash[0..31].length
token_hash[0..32].length
token_hash[0..32]
token_hash.length
token_hash
token:hash
continue
@token.token_hash.length
@token.token_hash
@token
continue
@token
continue
Time.now.to_f.to_s
Time.now.to_s
Time.now.to_i
Time.now.to_a
Time.now.to_
Time.now.to_f
Time.now.to_ms
Time.now-to_ms
Time.
Time
Time.now
continue
@qrlink.length
@qrlink
continue
@token
params
continue
params
@token
continue
@users.each
@users.inspect
@users
continue
@users
continue
query
qyery
continue
query
qyery
@users
continue
@users.first
@users.firs
@users.each
@users[1]
@users
continue
query.length
query.len
query.lem
query
query.
continue
params[:query][0]
params[:query]
params
params.permit(:query)
params[:query].permit(:
params.permit(:query)
params
continue
params
params.permit(:user)
params.permit(:user).empty?
params
continue
params
params.permit(:user)
params.permit(:user).
params.permit(:user).empty?
params.permit(:aaa).empty?
params.permit(:aaa).len
params.permit(:aaa).methods
params.permit(:aaa).size
params.permit(:aaa)
params[:user].permit(:user)
params[:user]
params
params.permit(:user)
params.permit(:user)[:user]
params
continue
params.permit(:user)[:user]
params.permit(:user)
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
username
continue
username
@users = User.where('email LIKE ?', '%' + username[:name] + '%')
continue
nln
nln = params.permit(:query)
n
n = params.permit(:query)
params.permit(:query)
params[:user].permit(:name)[:name]
params[:user].permit(:name)
params[:user]
params
continue
r.info
r
r = request.env["omniauth.auth"]
